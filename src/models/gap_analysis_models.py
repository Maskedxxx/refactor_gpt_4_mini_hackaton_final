# src/models/gap_analysis_models.py
# --- agent_meta ---
# role: domain-models-gap-analysis
# owner: @backend
# contract: Pydantic-—Å—Ö–µ–º—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ GAP-–∞–Ω–∞–ª–∏–∑–∞ —Ä–µ–∑—é–º–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–∏
# last_reviewed: 2025-08-15
# interfaces:
#   - EnhancedResumeTailoringAnalysis (–≥–ª–∞–≤–Ω–∞—è –º–æ–¥–µ–ª—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞)
# --- /agent_meta ---

from typing import List, Optional, Literal
from pydantic import BaseModel, Field
from enum import Enum


class CriticalityLevel(str, Enum):
    """–£—Ä–æ–≤–µ–Ω—å –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ - —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ø—Ä–æ–º–ø—Ç—É"""
    –ö–†–ò–¢–ò–ß–ù–û = "CRITICAL"  # –ë–µ–∑ —ç—Ç–æ–≥–æ —Ç–æ—á–Ω–æ –æ—Ç–∫–∞–∂—É—Ç
    –í–ê–ñ–ù–û = "IMPORTANT"  # –°–∏–ª—å–Ω–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ
    –ñ–ï–õ–ê–¢–ï–õ–¨–ù–û = "DESIRED"  # –ü–ª—é—Å, –Ω–æ –Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ


class ComplianceStatus(str, Enum):
    """–°—Ç–∞—Ç—É—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—é - —ç–º–æ–¥–∑–∏ –∏–∑ –ø—Ä–æ–º–ø—Ç–∞"""
    –ü–û–õ–ù–û–ï_–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï = "FULL_MATCH"  # ‚úÖ
    –ß–ê–°–¢–ò–ß–ù–û–ï_–°–û–û–¢–í–ï–¢–°–¢–í–ò–ï = "PARTIAL_MATCH"  # ‚ö†Ô∏è
    –û–¢–°–£–¢–°–¢–í–£–ï–¢ = "MISSING"  # ‚ùå
    –¢–†–ï–ë–£–ï–¢_–£–¢–û–ß–ù–ï–ù–ò–Ø = "UNCLEAR"  # üîç


class RequirementType(str, Enum):
    """–¢–∏–ø —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ —Å –ø—Ä–æ–º–ø—Ç–æ–º"""
    MUST_HAVE = "MUST_HAVE"  # –ë–µ–∑ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞
    NICE_TO_HAVE = "NICE_TO_HAVE"  # –ñ–µ–ª–∞—Ç–µ–ª—å–Ω–æ, –Ω–æ –º–æ–∂–Ω–æ —Ä–∞–∑–≤–∏—Ç—å
    –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï_–ü–õ–Æ–°–´ = "ADDITIONAL_BONUS"  # –ö–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞


class SkillCategory(str, Enum):
    """–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞"""
    HARD_SKILLS = "HARD_SKILLS"  # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏
    SOFT_SKILLS = "SOFT_SKILLS"  # –ì–∏–±–∫–∏–µ –Ω–∞–≤—ã–∫–∏
    EXPERIENCE = "EXPERIENCE"  # –û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã
    EDUCATION = "EDUCATION"  # –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ


class RequirementAnalysis(BaseModel):
    """–ê–Ω–∞–ª–∏–∑ –æ–¥–Ω–æ–≥–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏ - —É–ª—É—á—à–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è"""
    requirement_text: str = Field(..., description="–¢–µ–∫—Å—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∏–∑ –≤–∞–∫–∞–Ω—Å–∏–∏")
    requirement_type: RequirementType = Field(..., description="–¢–∏–ø —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è: MUST-HAVE, NICE-TO-HAVE –∏–ª–∏ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï_–ü–õ–Æ–°–´")
    skill_category: Optional[SkillCategory] = Field(
        None, description="–ö –∫–∞–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç–Ω–æ—Å–∏—Ç—Å—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–µ (Hard Skills, Soft Skills, Experience, Education)"
    )
    compliance_status: ComplianceStatus = Field(..., description="–°—Ç–∞—Ç—É—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è (‚úÖ‚ö†Ô∏è‚ùåüîç)")
    evidence_in_resume: Optional[str] = Field(None, description="–ì–¥–µ –≤ —Ä–µ–∑—é–º–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (–µ—Å–ª–∏ –µ—Å—Ç—å)")
    gap_description: Optional[str] = Field(None, description="–û–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–∑—Ä—ã–≤–∞, –µ—Å–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–µ–ø–æ–ª–Ω–æ–µ")
    impact_on_decision: str = Field(..., description="–ö–∞–∫ —ç—Ç–æ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–µ—à–µ–Ω–∏–µ –æ –∫–∞–Ω–¥–∏–¥–∞—Ç–µ")


class PrimaryScreeningResult(BaseModel):
    """–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–∫—Ä–∏–Ω–∏–Ω–≥–∞ (7-15 —Å–µ–∫—É–Ω–¥) - —Ç–æ—á–Ω–æ –∏–∑ –ø—Ä–æ–º–ø—Ç–∞"""
    job_title_match: bool = Field(
        ..., description="–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∑—é–º–µ –∏ –≤–∞–∫–∞–Ω—Å–∏–∏. –ü—Ä–∏–º–µ—Ä—ã: true - –µ—Å–ª–∏ –≤ —Ä–µ–∑—é–º–µ —É–∫–∞–∑–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å 'Python Developer', –∞ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è 'Python Developer'; false - –µ—Å–ª–∏ –≤ —Ä–µ–∑—é–º–µ —É–∫–∞–∑–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å 'Frontend Developer', –∞ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è 'Backend Developer'."
    )
    experience_years_match: bool = Field(..., description="–û–±—â–∏–π —Å—Ç–∞–∂ –≤ –Ω—É–∂–Ω–æ–π —Å—Ñ–µ—Ä–µ vs —Ç—Ä–µ–±—É–µ–º—ã–π")
    key_skills_visible: bool = Field(
        ..., description="–ù–∞–ª–∏—á–∏–µ –∫—Ä–∏—Ç–∏—á–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤, –≥–¥–µ –≤—Å–µ –∫–ª—é—á–µ–≤—ã–µ –Ω–∞–≤—ã–∫–∏ —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –Ω–∞–≤—ã–∫–∞–º–∏ –≤ —Ä–µ–∑—é–º–µ. –ü—Ä–∏–º–µ—Ä: true - –µ—Å–ª–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ 'Python', 'Django' —É–∫–∞–∑–∞–Ω—ã –≤ —Ä–µ–∑—é–º–µ; false - –µ—Å–ª–∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ 'Python', 'Django', –Ω–æ –≤ —Ä–µ–∑—é–º–µ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ 'Python'."
    )
    location_suitable: bool = Field(..., description="–õ–æ–∫–∞—Ü–∏—è –∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ —Ä–∞–±–æ—Ç–µ")
    salary_expectations_match: bool = Field(..., description="–ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–µ –æ–∂–∏–¥–∞–Ω–∏—è vs –±—é–¥–∂–µ—Ç –≤–∞–∫–∞–Ω—Å–∏–∏")
    overall_screening_result: Literal["–ü–†–ò–ù–Ø–¢–¨", "–í–û–ó–ú–û–ñ–ù–û", "–û–¢–ö–õ–û–ù–ò–¢–¨"] = Field(..., description="–û–±—â–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–∫—Ä–∏–Ω–∏–Ω–≥–∞")
    screening_notes: str = Field(..., description="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ —Å–∫—Ä–∏–Ω–∏–Ω–≥—É, –∫–æ—Ç–æ—Ä—ã–µ –ª–∞–∫–æ–Ω–∏—á–Ω–æ —É–∫–∞–∑—ã–≤–∞—é—Ç, —á—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –≤ —Å–∫—Ä–∏–Ω–∏–Ω–≥–µ")


class DetailedRecommendation(BaseModel):
    """–î–µ—Ç–∞–ª—å–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ —É–ª—É—á—à–µ–Ω–∏—é - —Å–≤—è–∑–∞–Ω–∞ —Å —Ñ–æ—Ä–º–∞—Ç–æ–º –∏–∑ –ø—Ä–æ–º–ø—Ç–∞"""
    section: Literal["–∑–∞–≥–æ–ª–æ–≤–æ–∫", "–Ω–∞–≤—ã–∫–∏", "–æ–ø—ã—Ç", "–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "—Å—Ç—Ä—É–∫—Ç—É—Ä–∞"] = Field(
        ..., description="–†–∞–∑–¥–µ–ª —Ä–µ–∑—é–º–µ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è"
    )
    criticality: CriticalityLevel = Field(
        ..., description="–ö—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: –ö–†–ò–¢–ò–ß–ù–û (–ø–æ–ø–∞–¥–µ—Ç –≤ critical_recommendations), –í–ê–ñ–ù–û (important_recommendations), –ñ–ï–õ–ê–¢–ï–õ–¨–ù–û (optional_recommendations)"
    )
    issue_description: str = Field(..., description="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã")
    specific_actions: List[str] = Field(
        ..., min_items=1, description="–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: —á—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å/—É–±—Ä–∞—Ç—å"
    )
    example_wording: Optional[str] = Field(None, description="–ü—Ä–∏–º–µ—Ä—ã —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–æ–∫: –∫–∞–∫ –ª—É—á—à–µ –Ω–∞–ø–∏—Å–∞—Ç—å")
    business_rationale: str = Field(..., description="–û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ: –ø–æ—á–µ–º—É —ç—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –¥–∞–Ω–Ω–æ–π –≤–∞–∫–∞–Ω—Å–∏–∏")


class ResumeQualityAssessment(BaseModel):
    """–û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Ä–µ–∑—é–º–µ - –≠–¢–ê–ü 4 –∏–∑ –ø—Ä–æ–º–ø—Ç–∞"""
    structure_clarity: int = Field(..., ge=1, le=10, description="–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç—å –∏ —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (1-10)")
    content_relevance: int = Field(..., ge=1, le=10, description="–†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ (1-10)")
    achievement_focus: int = Field(
        ..., ge=1, le=10, description="–ù–∞–ª–∏—á–∏–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π vs –æ–±—â–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ (1-10)"
    )
    adaptation_quality: int = Field(..., ge=1, le=10, description="–ê–¥–∞–ø—Ç–∞—Ü–∏—è –ø–æ–¥ –≤–∞–∫–∞–Ω—Å–∏—é (1-10)")
    overall_impression: Literal["–°–ò–õ–¨–ù–´–ô", "–°–†–ï–î–ù–ò–ô", "–°–õ–ê–ë–´–ô"] = Field(
        ..., description="–û–±—â–µ–µ –≤–ø–µ—á–∞—Ç–ª–µ–Ω–∏–µ –æ—Ç —Ä–µ–∑—é–º–µ"
    )
    quality_notes: str = Field(..., description="–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏")


class EnhancedResumeTailoringAnalysis(BaseModel):
    """–†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ä–µ–∑—é–º–µ –≤–∞–∫–∞–Ω—Å–∏–∏ - –≥–ª–∞–≤–Ω–∞—è –º–æ–¥–µ–ª—å"""

    primary_screening: PrimaryScreeningResult = Field(
        ..., description="–≠–¢–ê–ü 1: –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–µ—Ä–≤–∏—á–Ω–æ–≥–æ —Å–∫—Ä–∏–Ω–∏–Ω–≥–∞ (7-15 —Å–µ–∫—É–Ω–¥)"
    )
    requirements_analysis: List[RequirementAnalysis] = Field(
        ..., description="–≠–¢–ê–ü 2-3: –ê–Ω–∞–ª–∏–∑ –∫–∞–∂–¥–æ–≥–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è (MUST-HAVE/NICE-TO-HAVE/–ë–û–ù–£–°–´ + —Å—Ç–∞—Ç—É—Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è)"
    )
    quality_assessment: ResumeQualityAssessment = Field(
        ..., description="–≠–¢–ê–ü 4: –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Ä–µ–∑—é–º–µ"
    )
    critical_recommendations: List[DetailedRecommendation] = Field(
        ..., description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω—è –ö–†–ò–¢–ò–ß–ù–û (must-fix)"
    )
    important_recommendations: List[DetailedRecommendation] = Field(
        ..., description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω—è –í–ê–ñ–ù–û (—Å–∏–ª—å–Ω–æ —É–ª—É—á—à–∞—Ç)"
    )
    optional_recommendations: List[DetailedRecommendation] = Field(
        ..., description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —É—Ä–æ–≤–Ω—è –ñ–ï–õ–ê–¢–ï–õ–¨–ù–û (nice-to-have)"
    )
    overall_match_percentage: int = Field(
        ..., ge=0, le=100, description="–û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–∞–∫–∞–Ω—Å–∏–∏"
    )
    hiring_recommendation: Literal["–°–ò–õ–¨–ù–û_–î–ê", "–î–ê", "–í–û–ó–ú–û–ñ–ù–û", "–ù–ï–¢", "–°–ò–õ–¨–ù–û_–ù–ï–¢"] = Field(
        ..., description="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ –Ω–∞–π–º—É"
    )
    key_strengths: List[str] = Field(..., min_items=1, description="–ö–ª—é—á–µ–≤—ã–µ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–∞")
    major_gaps: List[str] = Field(..., description="–û—Å–Ω–æ–≤–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã")
    next_steps: str = Field(..., description="–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –Ω–∞–π–º–∞")

    class Config:
        extra = "forbid"
        title = "EnhancedResumeTailoringAnalysis"

